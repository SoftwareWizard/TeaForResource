<#@ include file="TeaForResource.Core.ttinclude" #>
<#@ assembly name="System.Core" #>
<#@ output extension=".generated.cs" #>
<#
    // Please make changes to the settings below.
    // All you have to do is save this file, and the output file(s) is/are generated.
    // or Select "Run Custom Tool" from File Context Menu
    // or Select "Transform all T4 Templates" from VS Build Menu.
    // Compiling does not regenerate the file(s)!
    // Hint: Before modifing the template install T4 Editor Plugin for VS from Devart and ForTea Resharper Plugin. Have more fun.
    
    // Main settings ************************************************************************************************************
    ResourcePath = @"";                                             // path to your resource files
    StaticResourceNamespaceName = "ResourceGenerator.Resources";    // Namespace for your static class
    DefaultLanguageCode = string.Empty;                             // not used as there will be no texts generated

    // ##########################################################################################################################
#>
// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
<# 
    var path = Host.ResolvePath(ResourcePath);
    var resources = ReadResources(path);
    if (!resources.Any())
    {
        Warning("No resources found");
    }
#>

namespace <#=        StaticResourceNamespaceName #>
{
<#
    foreach (var resource in resources) {
        var resourceKeys = resource.ResourceElements
            .Where(item => item.LanguageCode == DefaultLanguageCode)
            .Select(item => item.ResourceKey)
            .ToList();
#>
    public static class <#=            resource.Name #>Keys
    {
        public static string[] AllItems
        {
			get
			{
				return new []
				{
 <#        foreach (var resourceKey in resourceKeys) { #>
		            "<#=                resourceKey #>",
 <#        } #>
                };
            }
        }

<#        foreach (var resourceKey in resourceKeys) { #>
		public static string <#=                resourceKey #> = "<#=                resourceKey #>";
<#        } #>
    }

<#    } #>

}
// </auto-generated>